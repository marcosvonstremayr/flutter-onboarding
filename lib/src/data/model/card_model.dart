import '../../domain/entity/card.dart';

class CardModel extends Card {
  CardModel({
    String? cardId,
    String? dbfId,
    String? name,
    String? cardSet,
    String? type,
    String? faction,
    String? rarity,
    int? cost,
    int? attack,
    int? health,
    int? durability,
    int? armor,
    String? text,
    String? inPlayText,
    String? flavor,
    String? artist,
    bool? collectible,
    bool? elite,
    String? race,
    String? playerClass,
    String? multiClassGroup,
    String? classes,
    String? howToGet,
    String? howToGetGold,
    String? img,
    String? imgGold,
    String? locale,
    List<String>? mechanics,
  }) : super(
          cardId,
          dbfId,
          name,
          cardSet,
          type,
          faction,
          rarity,
          cost,
          attack,
          health,
          durability,
          armor,
          text,
          inPlayText,
          flavor,
          artist,
          collectible,
          elite,
          race,
          playerClass,
          multiClassGroup,
          classes,
          howToGet,
          howToGetGold,
          img,
          imgGold,
          locale,
          mechanics,
        );

  factory CardModel.fromJson(dynamic cardsJson) {
    List<String>? mechanics;
    if (cardsJson["mechanics"] != null) {
      cardsJson["mechanics"].forEach((name) {
        mechanics?.add(name["name"]);
      });
    }
    return CardModel(
      cardId: cardsJson["cardId"],
      dbfId: cardsJson["dbfId"],
      name: cardsJson["name"],
      cardSet: cardsJson["cardSet"],
      type: cardsJson["type"],
      faction: cardsJson["faction"],
      rarity: cardsJson["rarity"],
      cost: cardsJson["cost"],
      attack: cardsJson["attack"],
      health: cardsJson["health"],
      durability: cardsJson["durability"],
      armor: cardsJson["armor"],
      text: cardsJson["text"],
      inPlayText: cardsJson["inPlayText"],
      flavor: cardsJson["flavor"],
      artist: cardsJson["artist"],
      collectible: cardsJson["collectible"],
      elite: cardsJson["elite"],
      race: cardsJson["race"],
      playerClass: cardsJson["playerClass"],
      multiClassGroup: cardsJson["multiClassGroup"],
      classes: cardsJson["classes"],
      howToGet: cardsJson["howToGet"],
      howToGetGold: cardsJson["howToGetGold"],
      img: cardsJson["img"],
      imgGold: cardsJson["imgGold"],
      locale: cardsJson["locale"],
      mechanics: mechanics,
    );
  }
}

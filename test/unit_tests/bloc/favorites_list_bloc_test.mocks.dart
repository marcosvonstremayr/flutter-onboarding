// Mocks generated by Mockito 5.3.0 from annotations
// in hearthstone_cards/test/unit_tests/bloc/favorites_list_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:hearthstone_cards/src/data/model/card_model.dart' as _i5;
import 'package:hearthstone_cards/src/domain/entity/card_event.dart' as _i2;
import 'package:hearthstone_cards/src/domain/usecase/get_favorites_usecase.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCardEvent_0 extends _i1.SmartFake implements _i2.CardEvent {
  _FakeCardEvent_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [GetFavoritesUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetFavoritesUsecase extends _i1.Mock
    implements _i3.GetFavoritesUsecase {
  MockGetFavoritesUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CardEvent> call({_i5.CardModel? params}) =>
      (super.noSuchMethod(Invocation.method(#call, [], {#params: params}),
              returnValue: _i4.Future<_i2.CardEvent>.value(_FakeCardEvent_0(
                  this, Invocation.method(#call, [], {#params: params}))))
          as _i4.Future<_i2.CardEvent>);
}
